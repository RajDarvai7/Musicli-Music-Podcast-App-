def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '2'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.2'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}
android {
        namespace "com.rajdarvai.musicli"
        compileSdkVersion flutter.compileSdkVersion
        ndkVersion flutter.ndkVersion

        compileOptions {
            coreLibraryDesugaringEnabled true
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        kotlinOptions {
            jvmTarget = '1.8'
        }

        sourceSets {
            main.java.srcDirs += 'src/main/kotlin'
        }

    defaultConfig {
        applicationId "com.rajdarvai.musicli"
        minSdkVersion 19
        targetSdkVersion 34
        versionCode 2
        versionName "1.2"  // Ensure versionName is a string enclosed in quotes
        multiDexEnabled true
        // Other configurations...
    }
    signingConfigs {
       release {
           keyAlias keystoreProperties['keyAlias']
                      keyPassword keystoreProperties['keyPassword']
                      storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
                      storePassword keystoreProperties['storePassword']
       }
   }
    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}
repositories {
    // ...
    maven { url "https://jitpack.io" }
    mavenCentral()
}

dependencies {
    implementation 'androidx.window:window:1.0.0'
    implementation 'androidx.window:window-java:1.0.0'
    implementation "dev.shreyaspatil.EasyUpiPayment:EasyUpiPayment:3.0.3"
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.2.2'
}
